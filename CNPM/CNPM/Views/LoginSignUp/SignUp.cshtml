@model CNPM.Models.KhachHang
@{
    ViewBag.Title = "SignUp";
    Layout = "~/Views/Shared/LayoutPageShare.cshtml";
}

@Html.Partial("Sildeshow")
@using (Html.BeginForm("SignUp", "LoginSignUp", FormMethod.Post))
{
    <div class="main-signup">
        <div>

            <div class="sign-up-title-1">
                <p>Đăng kí</p>
            </div>
            <div class="sign-up-title-2">
                <p>Nhập thông tin của bạn để tạo tài khoản</p>
            </div>
            <div class="sign-up-firstname-lastname">
                <input type="text" name="Ho" id="Ho" placeholder="Họ">
                <input type="text" name="Ten" id="Ten" placeholder="Tên">
            </div>
            <div class="sign-up-email">
                <input type="email" name="Email" id="Email" placeholder="Vui lòng nhập email...">
            </div>
            <div class="sign-up-password icon">
                <input type="password" name="MatKhau" id="MatKhau" placeholder="Tạo mật khẩu">
                <i class="fa-regular fa-eye" id="eyeIcon" style="color: #b3b3b3;" onclick="ShowPass()"></i>
            </div>
            <div class="sign-up-repassword icon">
                <input type="password" name="repassword" id="repassword" placeholder="Xác nhận mật khẩu">
                <i class="fa-regular fa-eye" id="eyeIcon1" style="color: #b3b3b3;" onclick="ShowRePass()"></i>
            </div>
            <div class="sign-up-phone-number">
                <select name="" id="">
                    <option value="+84">+84</option>
                    <option value="+84">+84</option>
                    <option value="+84">+84</option>
                </select>
                <input type="tel" name="SoDienThoai" id="SoDienThoai">
            </div>
            <div class="sign-up-address">
                <input type="text" name="DiaChi" id="DiaChi" placeholder="Địa chỉ của bạn">
            </div>
            <div class="sign-up-checkbox">
                <label class="container">
                    <input type="checkbox" checked="checked">
                    <span class="checkmark">Tôi đồng ý với <span>Điều khoản và điều kiện</span></span>
                </label>
            </div>
            <div class="sign-up-submit">
                <button type="submit">Đăng kí</button>
            </div>
            <div class="sign-up-check">
                <p>Bạn đã có tài khoản ? <a href="@Url.Action("Login", "LoginSignUp")">Đăng nhập</a></p>
            </div>
            @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
            {
                <div class="error-message">
                    @ViewBag.ErrorMessage
                </div>
            }
        </div>
        <div style="height:1024px">
            <img src="~/images/login/stethoscope-frame-with-copy-space-1.png" alt="" srcset="">
        </div>
    </div>
}
    <script>
        function ShowPass() {
            var x = document.getElementById("MatKhau");
            var eyeIcon = document.getElementById("eyeIcon");
            if (x.type === "password") {
                x.type = "text";
                eyeIcon.classList.remove("fa-eye");
                eyeIcon.classList.add("fa-eye-slash");
            } else {
                x.type = "password";
                eyeIcon.classList.remove("fa-eye-slash");
                eyeIcon.classList.add("fa-eye");
            }
        }
        function ShowRePass() {
            var x = document.getElementById("repassword");
            var eyeIcon = document.getElementById("eyeIcon1");
            if (x.type === "password") {
                x.type = "text";
                eyeIcon.classList.remove("fa-eye");
                eyeIcon.classList.add("fa-eye-slash");
            } else {
                x.type = "password";
                eyeIcon.classList.remove("fa-eye-slash");
                eyeIcon.classList.add("fa-eye");

            }
        }
        function scrollToRenderBody() {
            var renderbodyElement = document.getElementById("renderbody");
            if (renderbodyElement) {
                var offsetTop = renderbodyElement.offsetTop; // Lấy khoảng cách từ đỉnh tài liệu đến "renderbody"
                var scrollDistance = offsetTop + 900; // 100 là khoảng cách bạn muốn điều chỉnh, bạn có thể thay đổi số này tùy ý
                window.scrollTo({
                    top: scrollDistance,
                    behavior: "smooth" // Cuộn mượt đến vị trí cụ thể
                });
            }
        }

        // Cuộn đến phần "renderbody" khi trang tải xong
        document.addEventListener("DOMContentLoaded", function (event) {
            scrollToRenderBody();
        });


        var swiper = new Swiper(".mySwiper", {
            slidesPerView: 1,
            spaceBetween: 30,
            keyboard: {
                enabled: true,
            },
            pagination: {
                el: ".swiper-pagination",
                clickable: true,
            },
            navigation: {
                nextEl: ".swiper-button-next",
                prevEl: ".swiper-button-prev",
            },
        });



    </script>




